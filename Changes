0.20 2014-11-04
  - Reduced the required accuracy in ISO 8601 representations, previously 
    the time of day where required to include hour and minute, the required 
    accuracy has now been reduced to hour.
  - Documented the %w conversion specification in ->srtftime, reported
    by <Peter Isaksson>.
  - Minor documentation tweaks.

0.19 2014-10-08
  - Fixed Makefile.PL to only check if Module::Install is missing, should
    make it possible to install using cpanm.
  - Added accessors for Julian Date (->jd) and Modified Julian Date (->mjd).

0.18 2014-09-09
  - Ensure that the referenced object has a SvREFCNT of 1 before trying to 
    reuse the invocant, fixes issue #7. Reported by Tomohiro Hosaka (bokutin).
  - Added accessor method ->utc_year, used by DateTime::TimeZone for dates 
    far into the future, fixes issue #6. Reported by Karl Lohner (klohner).

0.17 2014-08-07
  - Ensure that the SvREFCNT is 1 before trying to reuse the invocant in
    chained method calls (leont++).
  - Require Test::Fatal v0.006 or higher, fixes issue #5. Reported by
    Doug Bell (preaction).
  - Removed the "early preview release" warning from the documentation.

0.16 2014-03-18
  - Fixed the Storable thaw method to account for negative offsets
  - Corrected documentation for length_of_{year,quarter,month} methods
  - Added following methods to inrcrease consistency in the API:
       - with_day_of_quarter()
       - with_millisecond()
       - with_microsecond()
       - plus_milliseconds()
       - plus_microseconds()
       - minus_milliseconds()
       - minus_microseconds()

0.15 2014-02-23
  - Changed API in to_string() to use named parameters instead of boolean to
    make the API more consistent.
  - Added three new methods:
        - length_of_year()
        - length_of_quarter()
        - length_of_month()
  - Corrected typedef declaration in dt_config.h, should now hopefully
    compile correctly on Windows when using MSC.

0.14 2014-01-26
  - Changed now() to use the reentrant localtime_r() if provided by libc
  - Added support for the literal strings 'UTC' and 'GMT' as UTC designator
    in from_string() when lenient is true.
  - Sereal is now a supported serializer, documented and tested. Added an 
    examample of usage, eg/sereal.pl

0.13 2014-01-04
  - Implemented ->with_offset_same_local()
  - Renamed the method ->with_offset to ->with_offset_same_instant, the old 
    method name is aliased.
  - Added a new section to the documentation "TIME ZONES" which shows how to
    convert between time zones using DateTime::TimeZone.
  - Added more tests

0.12 2013-12-29
  - Implemented support for lenient parsing in ->from_string, should be capable
    of parsing most ISO 8601 profiles, including non conformant ISO 8601 
    representations such as ISO 9075.
  - Implemented support for generic FREEZE / THAW serialization, upcomming Sereal
    will support these callbacks.
  - Implemented ->new
  - Refactored test suite and added more tests
  - Implemented support for GNU's '_', '-' and '0' flags in ->strftime()
  - Added eg/strftime.pl

0.11 2013-12-15
  - Added support for date/time arithmethics
  - Added support for altering the components of the date/time
  - Changed ->from_epoch to only accept seconds and nanosecond parameters
  - Added POD section with example format strings
  - Documentation improvements

0.10 2013-12-07
  - Added support for fractional seconds in the constructor ->from_epoch
  - Added serialization support for:
        - Storable
        - JSON
        - CBOR
  - Changed the method ->to_string to return the same string representation 
    as stringification.
  - Optimized the usage of chained method calls from constructors.
  - Added eg/cbor.pl and eg/json.pl

0.09 2013-12-05
  - Added new constructor method, ->now_utc
  - Added two extended conversion specifications, %k and %l. Both common in
    GNU, BSD and perl implementations of strftime()
  - The extended %f conversion specification now accepts an optional maximum 
    field width
  - Documented remaining methods and overloaded operators
  - Added the now_utc constructor to dev/bench.pl

0.08 2013-12-04
  - Changed resolution from microsecond to nanosecond
  - Implemented ->with_nanosecond()
  - Documentation improvements
  - Fixed strftime() to preserve the SvUTF8 flag if the given format 
    string has the SvUTF8 flag set.
  - Overhauled strftime() conversion specifications to better confirm to 
    IEEE Std 1003.1. Extended conversion specifications is now documented 
    as such.

0.07 2013-12-02
  - Documented most of the API.
  - Implemented ->to_string().
  - Changed stringification to only include fractional seconds in output 
    if present.

0.06 2013-11-31
  - Added more docs.

0.05 2013-11-30
  - Renamed internal variable pow10 to prevent symbol clashes

0.04 2013-11-30
  - Added accessor for week of the year, ->week
  - Implemented support for parsing of any ISO 8601 date and time of day
    in both extended and basic format. For example:
        - 0001-01-01T00:00:00Z  (Calender date, extended format)
        - 00010101T000000Z      (Calender date, basic format)
        - 0001-W01-1T00:00:00Z  (Week date, extended format)
        - 0001W011T000000Z      (Week date, basic format)
        - 0001-001T00:00:00Z    (Ordinal date, extended format)
        - 0001001T000000Z       (Ordinal date, basic format)
  - Added localtime() and POSIX::strftime() to benchmark, invoking 
    Time::Moment->now is ~ 70% faster than invoking localtime().

0.03 2013-11-28
  - Renamed variable 'sun' to 'sunday' to prevent conflict on Solaris 
    operating system which defines a macro named 'sun'. (leont++)

0.02 2013-11-25
  - Implemented ->from_string() in C
  - Implemented ->now() in C if the system supports gettimeofday(2)
  - Added dev/sizeof.pl
  - Added Time::Piece to dev/bench.pl

0.01 2013-11-24
  - Initial CPAN preview release.

